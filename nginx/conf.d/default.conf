# 后端 API 服务配置

# Upstream 后端服务
upstream backend {
    server backend:3000;
    keepalive 32;
}

# HTTP 服务器配置（重定向到 HTTPS）
server {
    listen 80;
    listen [::]:80;
    
    # 替换为你的域名
    server_name mdice.top keep-account.mdice.top;
    
    # 重定向到 HTTPS
    return 301 https://$server_name$request_uri;
}

# HTTPS 服务器配置
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    
    # 替换为你的域名
    server_name mdice.top keep-account.mdice.top;
    
    # SSL 证书配置
    ssl_certificate /etc/nginx/ssl/mdice.top.crt;
    ssl_certificate_key /etc/nginx/ssl/mdice.top.key;
    
    # SSL 配置（推荐配置）
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    
    # SSL 会话缓存
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # HSTS（强制 HTTPS）
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # 安全头
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # 请求体大小限制
    client_max_body_size 10M;
    
    # 字符集
    charset utf-8;
    
    # 日志
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # 反向代理到后端服务
    location / {
        proxy_pass http://backend;
        
        # 代理请求头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket 支持（如果需要）
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # 健康检查接口
    location /api/health {
        proxy_pass http://backend/api/health;
        access_log off;
    }
    
    # 静态文件（头像上传）
    location /uploads/ {
        proxy_pass http://backend/uploads/;
        proxy_set_header Host $host;
        
        # 缓存设置
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
}

